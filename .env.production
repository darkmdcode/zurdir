# Production Environment Configuration for ZURDIR
# Copy this file to .env for production deployment

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# PostgreSQL connection string - provided by Render.com database service
DATABASE_URL=postgresql://username:password@hostname:port/database

# =============================================================================
# SECURITY CONFIGURATION  
# =============================================================================
# JWT secret key for token signing - MUST be unique and secure
# Generate with: openssl rand -base64 64
JWT_SECRET=your-super-secret-jwt-key-here-make-it-very-long-and-random-for-production

# Admin panel access code (6 digits recommended)
ADMIN_PASSCODE=123456

# Encryption key for backup files (32 characters required)
# Generate with: openssl rand -hex 16
ENCRYPTION_KEY=your-32-character-encryption-key-here

# =============================================================================
# API CONFIGURATION
# =============================================================================
# Frontend API URL - will be provided by Render.com
NEXT_PUBLIC_API_URL=https://your-app-name.onrender.com

# Backend server port (Render uses PORT environment variable)
PORT=10000

# Runtime environment
NODE_ENV=production

# =============================================================================
# AI/OLLAMA CONFIGURATION
# =============================================================================
# Primary Ollama endpoint
OLLAMA_BASE_URL=https://ollama.cosmictools.us

# Optional: Custom Ollama URL override
OLLAMA_CUSTOM_URL=

# =============================================================================
# FILE UPLOAD CONFIGURATION
# =============================================================================
# Maximum file size in bytes (100MB default)
MAX_FILE_SIZE=100000000

# Allowed file types (* for all, or comma-separated MIME types)
ALLOWED_FILE_TYPES=*

# =============================================================================
# WEB SEARCH CONFIGURATION
# =============================================================================
# Enable/disable web search functionality
ENABLE_WEB_SEARCH=true

# Comma-separated list of blocked domains
BLOCKED_DOMAINS=facebook.com,twitter.com,instagram.com

# =============================================================================
# MONITORING & ERROR TRACKING (OPTIONAL)
# =============================================================================
# Sentry DSN for error tracking (backend)
SENTRY_DSN=

# Sentry auth token for releases
SENTRY_AUTH_TOKEN=

# Public Sentry DSN for frontend
NEXT_PUBLIC_SENTRY_DSN=

# =============================================================================
# PRODUCTION OPTIMIZATIONS
# =============================================================================
# Database connection pool settings
DB_POOL_MIN=2
DB_POOL_MAX=20
DB_POOL_IDLE_TIMEOUT=30000

# Session configuration
SESSION_COOKIE_SECURE=true
SESSION_COOKIE_HTTP_ONLY=true
SESSION_COOKIE_SAME_SITE=strict

# Rate limiting
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# =============================================================================
# BACKUP CONFIGURATION
# =============================================================================
# Backup retention period in days
BACKUP_RETENTION_DAYS=60

# Backup schedule (cron format)
BACKUP_SCHEDULE=0 2 * * *

# =============================================================================
# RENDER.COM SPECIFIC
# =============================================================================
# These are automatically set by Render, but can be overridden if needed

# Build command (set in render.yaml)
# BUILD_COMMAND=npm install && npm run build

# Start command (set in render.yaml)  
# START_COMMAND=npm start

# Health check path
# HEALTH_CHECK_PATH=/health

# =============================================================================
# SECURITY HEADERS (Automatically handled by Helmet.js)
# =============================================================================
# Content Security Policy
CSP_DEFAULT_SRC='self'
CSP_SCRIPT_SRC='self' 'unsafe-inline'
CSP_STYLE_SRC='self' 'unsafe-inline'

# HTTPS enforcement
FORCE_HTTPS=true

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================
# Log level for production
LOG_LEVEL=info

# Enable request logging
LOG_REQUESTS=true

# =============================================================================
# CLEANUP AND MAINTENANCE
# =============================================================================
# Auto-cleanup old sessions (hours)
SESSION_CLEANUP_HOURS=24

# Auto-cleanup old error logs (days)
ERROR_LOG_RETENTION_DAYS=30

# Auto-cleanup old system logs (days)
SYSTEM_LOG_RETENTION_DAYS=30

# =============================================================================
# FEATURE FLAGS
# =============================================================================
# Enable advanced features
ENABLE_VECTOR_SEARCH=true
ENABLE_REAL_TIME_CHAT=true
ENABLE_FILE_PROCESSING=true
ENABLE_BACKGROUND_JOBS=true

# =============================================================================
# PERFORMANCE TUNING
# =============================================================================
# Memory limits for file uploads
UPLOAD_MEMORY_LIMIT=50mb
UPLOAD_TIMEOUT_MS=300000

# AI response timeout
AI_RESPONSE_TIMEOUT_MS=120000

# WebSocket settings
WS_HEARTBEAT_INTERVAL=30000
WS_MAX_CONNECTIONS=100

# =============================================================================
# INSTRUCTIONS FOR DEPLOYMENT
# =============================================================================
#
# 1. Copy this file to .env in your project root
# 2. Replace all placeholder values with actual production values
# 3. Generate secure random values for JWT_SECRET and ENCRYPTION_KEY
# 4. Set ADMIN_PASSCODE to a secure 6-digit code
# 5. Configure DATABASE_URL with your PostgreSQL connection string
# 6. Set NEXT_PUBLIC_API_URL to your deployed backend URL
# 7. Add optional Sentry configuration for error tracking
# 8. Customize file upload and web search settings as needed
# 9. Review and adjust rate limiting and security settings
# 10. Deploy to Render.com using the provided render.yaml configuration
#
# =============================================================================